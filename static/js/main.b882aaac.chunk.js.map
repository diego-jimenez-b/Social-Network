{"version":3,"sources":["pages/AuthForm.module.css","components/profile/UserInfo.module.css","components/posts-list/PostItem.module.css","pages/Profile.module.css","components/navigation-bar/MainNavigation.module.css","pages/GeneralPosts.module.css","components/profile/NewPost.module.css","components/posts-list/PostsList.module.css","components/profile/UserInfo.js","store/auth-context.js","components/navigation-bar/MainNavigation.js","hooks/useInput.js","pages/AuthForm.js","firebase.js","firebaseActions.js","assets/icons/trash.svg","assets/icons/heart-empty.svg","assets/icons/heart-full.svg","assets/icons/profile-user.svg","components/posts-list/PostItem.js","components/posts-list/PostsList.js","pages/GeneralPosts.js","assets/icons/gear.svg","components/profile/NewPost.js","assets/icons/down-arrow.svg","pages/Profile.js","assets/background.jpg","App.js","store/AuthContextProvider.js","index.js"],"names":["module","exports","initialPicture","AuthContext","createContext","isLoggedIn","userId","username","profilePicture","createNewUser","email","password","login","logout","MainNavigation","authCtx","useContext","className","classes","navbar","to","btn","onClick","useInput","validate","useState","enteredValue","setEnteredValue","wasTouched","setWasTouched","valueIsValid","value","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","AuthForm","isLogin","setIsLogin","includes","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","trim","length","passwordIsValid","passwordHasError","passwordChangeHandler","passwordBlurHandler","usernameIsValid","usernameHasError","usernameChangeHandler","usernameBlurHandler","getClasses","error","message","red","passwordAutoTxt","onSubmit","preventDefault","type","placeholder","onChange","onBlur","autoComplete","actions","prevState","text","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","storage","getStorage","addDocument","path","obj","a","addDoc","collection","updateDocument","updateDoc","doc","updatePost","newImg","prevImg","newImgLocal","updatedObj","image","image_local","removeImage","uploadImage","file","imgRef","ref","uploadBytes","deleteObject","getImageUrl","action","getDownloadURL","url","getUserInfo","getDoc","docSnap","data","PostItem","onEdit","isPrivate","id","likes","author_id","author","timestamp","author_photo","userLiked","users","inGeneral","useLocation","pathname","post","img","src","profileImg","alt","Date","toLocaleString","deleteDoc","trashIcon","currentNum","currentUsers","updatedUsers","push","filter","user","counter","modifyLikes","heartFullIcon","heartEmptIcon","PostsList","props","postsList","setPostsList","isLoading","setIsLoading","isCollectionGroup","collPath","useEffect","q","query","collectionGroup","onSnapshot","querySnapshot","posts","forEach","sortedPosts","sort","b","map","GeneralPosts","title","selectedFile","UserInfo","showConfig","setShowConfig","setImage","showMessage","setShowMessage","photo","changeProfileImage","newImageUrl","pictureChange","setTimeout","btnClasses","info","configIcon","config","files","reader","FileReader","onload","e","result","readAsDataURL","accept","document","getElementById","click","disabled","NewPost","edit","onFinishEditing","setFile","console","log","postRef","useRef","fileInputRef","current","savePostHandler","alert","filePath","name","getTime","resetNewPost","onlyImage","currentFile","bind","Profile","editing","setEditing","publicPosts","setPublicPosts","privatePosts","setPrivatePosts","editPostHandler","profile","arrowImg","style","transform","App","location","backgroundImg","exact","initialUserState","AuthContextProvider","setUser","history","useHistory","auth","getAuth","onAuthStateChanged","uid","userInfo","getUser","authContext","createUserWithEmailAndPassword","then","userCredential","setDoc","catch","err","code","signInWithEmailAndPassword","signOut","updatedPhoto","Provider","children","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.b882aaac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"AuthForm_background__3KrZm\",\"form-container\":\"AuthForm_form-container__3kXpV\",\"btn\":\"AuthForm_btn___5j8H\",\"actions\":\"AuthForm_actions__3qWgF\",\"text\":\"AuthForm_text__3Ob4_\",\"user-info\":\"AuthForm_user-info__QQ4Hw\",\"message\":\"AuthForm_message__OzCiQ\",\"red\":\"AuthForm_red__2YH1F\",\"error\":\"AuthForm_error__1yo3n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"UserInfo_info__3uMdi\",\"profile-img\":\"UserInfo_profile-img__2exm5\",\"config-icon\":\"UserInfo_config-icon__UFzB1\",\"config\":\"UserInfo_config__1XSIr\",\"action-btns\":\"UserInfo_action-btns__2pn0q\",\"message\":\"UserInfo_message__3RRz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"PostItem_post__3yOne\",\"actions\":\"PostItem_actions__2EhW0\",\"user-info\":\"PostItem_user-info__25ZKw\",\"profile-img\":\"PostItem_profile-img__QQ3zR\",\"img\":\"PostItem_img__1LmWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__FXFUc\",\"posts\":\"Profile_posts__3qmYt\",\"posts-section\":\"Profile_posts-section__UtMJ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"MainNavigation_navbar__Hp_AV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"GeneralPosts_title__uhP4V\",\"posts\":\"GeneralPosts_posts__mFaeW\",\"message\":\"GeneralPosts_message__LttGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-post\":\"NewPost_new-post__mFH1c\",\"edit-img\":\"NewPost_edit-img___W7Vw\",\"actions\":\"NewPost_actions__1-6wI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"PostsList_posts__QC7PH\"};","import { useContext, useEffect, useState } from 'react';\r\nimport AuthContext from '../../store/auth-context';\r\nimport {\r\n  getImageUrl,\r\n  updateDocument,\r\n  uploadImage,\r\n} from '../../firebaseActions';\r\n\r\nimport profileImg from '../../assets/icons/profile-user.svg';\r\nimport configIcon from '../../assets/icons/gear.svg';\r\nimport classes from './UserInfo.module.css';\r\n\r\nlet selectedFile = null;\r\nlet initialPicture;\r\n\r\nconst UserInfo = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [showConfig, setShowConfig] = useState(false);\r\n  const [image, setImage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n\r\n  const { profilePicture: photo } = authCtx;\r\n  useEffect(() => {\r\n    if (photo) {\r\n      setImage(photo);\r\n      initialPicture = photo;\r\n    } else {\r\n      setImage(profileImg);\r\n      initialPicture = profileImg;\r\n    }\r\n\r\n    return (selectedFile = null);\r\n  }, [photo]);\r\n\r\n  const toggleConfigHandler = () => setShowConfig((prevState) => !prevState);\r\n\r\n  const fileInputHandler = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      selectedFile = event.target.files[0];\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setImage(e.target.result);\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    } else {\r\n      selectedFile = null;\r\n\r\n      setImage(initialPicture);\r\n    }\r\n  };\r\n\r\n  const changeProfileImage = async () => {\r\n    setIsLoading(true);\r\n\r\n    let newImageUrl;\r\n\r\n    await uploadImage(`users/${authCtx.userId}/profile-image`, selectedFile);\r\n    await getImageUrl(`users/${authCtx.userId}/profile-image`, (url) => {\r\n      newImageUrl = url;\r\n    });\r\n    await updateDocument(`users/${authCtx.userId}`, {\r\n      photo: newImageUrl,\r\n    });\r\n\r\n    selectedFile = null;\r\n    authCtx.pictureChange(newImageUrl);\r\n    setShowConfig(false);\r\n    setIsLoading(false);\r\n\r\n    setShowMessage(true);\r\n    setTimeout(() => setShowMessage(false), 3000);\r\n  };\r\n\r\n  const cancelChange = () => {\r\n    selectedFile = null;\r\n    setImage(initialPicture);\r\n    setShowConfig(false);\r\n  };\r\n\r\n  const selectFile = () => {\r\n    document.getElementById('file-input').click();\r\n  };\r\n\r\n  const btnClasses = isLoading ? 'btn disabled' : 'btn';\r\n\r\n  return (\r\n    <div className={classes.info}>\r\n      <img\r\n        onClick={toggleConfigHandler}\r\n        className={classes['config-icon']}\r\n        src={configIcon}\r\n        alt='configurate'\r\n      />\r\n\r\n      {image && (\r\n        <img src={image} className={classes['profile-img']} alt='profile' />\r\n      )}\r\n      <h3>{authCtx.username}</h3>\r\n      {showMessage && (\r\n        <span className={classes.message}>\r\n          Your profile picture has been changed, you might need to refresh the\r\n          page to visualize this change\r\n        </span>\r\n      )}\r\n\r\n      {showConfig && (\r\n        <div className={classes.config}>\r\n          <input\r\n            type='file'\r\n            onChange={fileInputHandler}\r\n            accept='image/*'\r\n            id='file-input'\r\n          />\r\n\r\n          <button\r\n            className={btnClasses}\r\n            onClick={selectFile}\r\n            disabled={isLoading}\r\n          >\r\n            change profile picture\r\n          </button>\r\n\r\n          {selectedFile && (\r\n            <div className={classes['action-btns']}>\r\n              <button\r\n                className={btnClasses}\r\n                onClick={changeProfileImage}\r\n                disabled={isLoading}\r\n              >\r\n                Confirm\r\n              </button>\r\n              <button\r\n                className={btnClasses}\r\n                onClick={cancelChange}\r\n                disabled={isLoading}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import { createContext } from 'react';\r\n\r\nconst AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: '',\r\n  username: '',\r\n  profilePicture: '',\r\n  createNewUser: (email, password) => {},\r\n  login: (email, password) => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport default AuthContext;","import { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext from '../../store/auth-context';\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () => {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const logoutHandler = () => {\r\n    authCtx.logout();\r\n  };\r\n\r\n  if (!authCtx.isLoggedIn) {\r\n    return (\r\n      <nav className={classes.navbar}>\r\n        <Link to='/auth'>\r\n          <button className='btn'>Login</button>\r\n        </Link>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav className={classes.navbar}>\r\n      <div>\r\n        <Link to='/general'>Home</Link>\r\n        <Link to='/profile'>Profile</Link>\r\n      </div>\r\n\r\n      <button className={`btn ${classes.btn}`} onClick={logoutHandler}>\r\n        Logout\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { useState } from 'react';\r\n\r\nconst useInput = (validate) => {\r\n  const [enteredValue, setEnteredValue] = useState('');\r\n  const [wasTouched, setWasTouched] = useState(false);\r\n\r\n  const valueIsValid = validate(enteredValue);\r\n  const hasError = wasTouched && !valueIsValid;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n  const inputBlurHandler = () => {\r\n    setWasTouched(true);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useInput from '../hooks/useInput';\r\nimport AuthContext from '../store/auth-context';\r\nimport classes from './AuthForm.module.css';\r\n\r\nconst AuthForm = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const {\r\n    value: email,\r\n    isValid: emailIsValid,\r\n    hasError: emailHasError,\r\n    valueChangeHandler: emailChangeHandler,\r\n    inputBlurHandler: emailBlurHandler,\r\n  } = useInput((value) => value.includes('@'));\r\n\r\n  const {\r\n    value: password,\r\n    isValid: passwordIsValid,\r\n    hasError: passwordHasError,\r\n    valueChangeHandler: passwordChangeHandler,\r\n    inputBlurHandler: passwordBlurHandler,\r\n  } = useInput((value) => value.trim().length >= 6);\r\n\r\n  const {\r\n    value: username,\r\n    isValid: usernameIsValid,\r\n    hasError: usernameHasError,\r\n    valueChangeHandler: usernameChangeHandler,\r\n    inputBlurHandler: usernameBlurHandler,\r\n  } = useInput((value) => value.trim().length >= 4);\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!emailIsValid || !passwordIsValid) {\r\n      emailBlurHandler();\r\n      passwordBlurHandler();\r\n      if (!isLogin && !usernameIsValid) usernameBlurHandler();\r\n      return;\r\n    }\r\n\r\n    if (isLogin) {\r\n      authCtx.login(email, password);\r\n    } else {\r\n      authCtx.createNewUser(email, password, username);\r\n    }\r\n  };\r\n\r\n  const toggleLoginHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n  const getClasses = (error) => {\r\n    return `${classes.message} ${error ? classes.red : ''}`;\r\n  };\r\n\r\n  const passwordAutoTxt = isLogin ? 'current-password' : 'new-password';\r\n\r\n  return (\r\n    <div className={classes['form-container']}>\r\n      <h1>Posts Demo</h1>\r\n\r\n      <form onSubmit={formSubmitHandler}>\r\n        <input\r\n          type='text'\r\n          placeholder='Email'\r\n          value={email}\r\n          onChange={emailChangeHandler}\r\n          onBlur={emailBlurHandler}\r\n          autoComplete='email'\r\n          className={emailHasError ? classes.error : ''}\r\n        />\r\n        {emailHasError && (\r\n          <span className={getClasses(emailHasError)}>Invalid email</span>\r\n        )}\r\n\r\n        <input\r\n          type='password'\r\n          placeholder='Password'\r\n          value={password}\r\n          onChange={passwordChangeHandler}\r\n          onBlur={passwordBlurHandler}\r\n          autoComplete={passwordAutoTxt}\r\n          className={passwordHasError ? classes.error : ''}\r\n        />\r\n        {(!isLogin || passwordHasError) && (\r\n          <span className={getClasses(passwordHasError)}>\r\n            6 characters or more\r\n          </span>\r\n        )}\r\n\r\n        {!isLogin && (\r\n          <div className={classes['user-info']}>\r\n            <input\r\n              type='text'\r\n              placeholder='Username'\r\n              value={username}\r\n              onChange={usernameChangeHandler}\r\n              onBlur={usernameBlurHandler}\r\n              className={usernameHasError ? classes.error : ''}\r\n            />\r\n            <span className={getClasses(usernameHasError)}>\r\n              4 characters or more\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        <button className={`btn ${classes.btn}`} type='submit'>\r\n          {isLogin ? 'Log in' : 'Sign up'}\r\n        </button>\r\n      </form>\r\n\r\n      <div className={classes.actions}>\r\n        <span onClick={toggleLoginHandler} className={classes.text}>\r\n          {isLogin\r\n            ? \"Don't have an account? Register!\"\r\n            : 'Login with existing account'}\r\n        </span>\r\n        <Link to='general'>Enter as guest</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyC7BCm-0dBGHvPJPd7By8dD99WwXerbPbs',\r\n  authDomain: 'social-project-f4800.firebaseapp.com',\r\n  projectId: 'social-project-f4800',\r\n  storageBucket: 'social-project-f4800.appspot.com',\r\n  messagingSenderId: '903970892258',\r\n  appId: '1:903970892258:web:81b7d4987b8acf5c0131bb',\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore(app);\r\nexport const storage = getStorage(app);\r\n\r\nexport default app;\r\n","import {\r\n  doc,\r\n  deleteDoc,\r\n  updateDoc,\r\n  addDoc,\r\n  getDoc,\r\n  collection,\r\n} from 'firebase/firestore';\r\nimport {\r\n  ref,\r\n  deleteObject,\r\n  uploadBytes,\r\n  getDownloadURL,\r\n} from 'firebase/storage';\r\nimport { storage } from './firebase';\r\nimport { db } from './firebase';\r\n\r\nexport const addDocument = async (path, obj) => {\r\n  await addDoc(collection(db, path), obj);\r\n};\r\n\r\nexport const deleteDocument = (path) => {\r\n  deleteDoc(doc(db, path));\r\n};\r\n\r\nexport const updateDocument = async (path, obj) => {\r\n  await updateDoc(doc(db, path), obj);\r\n};\r\n\r\nexport const updatePost = async (path, text, newImg, prevImg, newImgLocal) => {\r\n  let updatedObj = { text };\r\n\r\n  if (newImg === false || (newImg && prevImg)) {\r\n    updatedObj = {\r\n      text,\r\n      image: newImg ? newImg : null,\r\n      image_local: newImgLocal ? newImgLocal : null,\r\n    };\r\n    removeImage(prevImg);\r\n  }\r\n\r\n  if (newImg && !prevImg) {\r\n    updatedObj = { text, image: newImg, image_local: newImgLocal };\r\n  }\r\n\r\n  await updateDoc(doc(db, path), updatedObj);\r\n};\r\n\r\nexport const uploadImage = async (path, file) => {\r\n  const imgRef = ref(storage, path);\r\n  await uploadBytes(imgRef, file);\r\n};\r\n\r\nexport const removeImage = (path) => {\r\n  const imgRef = ref(storage, path);\r\n  deleteObject(imgRef);\r\n};\r\n\r\nexport const getImageUrl = async (path, action) => {\r\n  const url = await getDownloadURL(ref(storage, path));\r\n  action(url);\r\n};\r\n\r\nexport const modifyLikes = (path, id, currentNum, currentUsers, type) => {\r\n  if (type === 'like' && currentUsers.includes(id)) return;\r\n  if (!type && !currentUsers.includes(id)) return;\r\n\r\n  let updatedUsers = [...currentUsers];\r\n  if (type === 'like') {\r\n    updatedUsers.push(id);\r\n  } else {\r\n    updatedUsers = updatedUsers.filter((user) => user !== id);\r\n  }\r\n\r\n  let data = {\r\n    likes: {\r\n      counter: type === 'like' ? currentNum + 1 : currentNum - 1,\r\n      users: updatedUsers,\r\n    },\r\n  };\r\n\r\n  updateDoc(doc(db, path), data);\r\n};\r\n\r\nexport const getUserInfo = async (userId) => {\r\n  const docSnap = await getDoc(doc(db, 'users', userId));\r\n  return docSnap.data();\r\n};\r\n","export default __webpack_public_path__ + \"static/media/trash.bb8494aa.svg\";","export default __webpack_public_path__ + \"static/media/heart-empty.94cfda63.svg\";","export default __webpack_public_path__ + \"static/media/heart-full.cb0d2295.svg\";","export default __webpack_public_path__ + \"static/media/profile-user.2ab6e483.svg\";","import { useLocation } from 'react-router';\r\nimport AuthContext from '../../store/auth-context';\r\nimport { useContext } from 'react';\r\nimport {\r\n  deleteDocument,\r\n  modifyLikes,\r\n  removeImage,\r\n} from '../../firebaseActions';\r\n\r\nimport trashIcon from '../../assets/icons/trash.svg';\r\nimport heartEmptIcon from '../../assets/icons/heart-empty.svg';\r\nimport heartFullIcon from '../../assets/icons/heart-full.svg';\r\nimport profileImg from '../../assets/icons/profile-user.svg';\r\nimport classes from './PostItem.module.css';\r\n\r\nconst PostItem = ({ data, onEdit, isPrivate }) => {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const {\r\n    text,\r\n    id,\r\n    image,\r\n    image_local,\r\n    likes,\r\n    author_id,\r\n    author,\r\n    timestamp,\r\n    author_photo,\r\n  } = data;\r\n\r\n  const userId = authCtx.userId;\r\n  const userLiked = data.likes.users.includes(userId);\r\n\r\n  const location = useLocation();\r\n\r\n  const deletePostHandler = () => {\r\n    const collection = isPrivate ? 'private-posts' : 'posts';\r\n    deleteDocument(`users/${userId}/${collection}/${id}`);\r\n    if (image) {\r\n      removeImage(image_local);\r\n    }\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    onEdit({ text, id, image, isPrivate, image_local });\r\n  };\r\n\r\n  const likeHandler = () => {\r\n    if (!authCtx.isLoggedIn) return;\r\n\r\n    const type = userLiked ? null : 'like';\r\n    modifyLikes(\r\n      `users/${author_id}/posts/${id}`,\r\n      userId,\r\n      likes.counter,\r\n      likes.users,\r\n      type\r\n    );\r\n  };\r\n\r\n  const inGeneral = location.pathname === '/general';\r\n\r\n  return (\r\n    <li className={classes.post}>\r\n      <div>\r\n        {inGeneral && (\r\n          <div className={classes['user-info']}>\r\n            <div className={classes['profile-img']}>\r\n              <img\r\n                className={classes.img}\r\n                src={author_photo ? author_photo : profileImg}\r\n                alt='profile'\r\n              />\r\n            </div>\r\n            <span>{author} &nbsp;</span>\r\n          </div>\r\n        )}\r\n        <span>{new Date(timestamp).toLocaleString()}</span>\r\n\r\n        {!inGeneral && (\r\n          <div className={classes.actions}>\r\n            <button onClick={startEditingHandler}>edit</button>\r\n            <img onClick={deletePostHandler} src={trashIcon} alt='trash-icon' />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        {image && <img id='post-image' src={image} alt='post' />}\r\n        <span>{text}</span>\r\n      </div>\r\n\r\n      {!isPrivate && (\r\n        <div>\r\n          <img\r\n            onClick={likeHandler}\r\n            src={userLiked ? heartFullIcon : heartEmptIcon}\r\n            alt='empty-heart-icon'\r\n          />\r\n          <span>{likes.counter} likes</span>\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import { useEffect, useState } from 'react';\r\nimport PostItem from './PostItem';\r\nimport {\r\n  collection,\r\n  collectionGroup,\r\n  query,\r\n  onSnapshot,\r\n} from 'firebase/firestore';\r\nimport classes from './PostsList.module.css';\r\nimport { db } from '../../firebase';\r\n\r\nconst PostsList = (props) => {\r\n  const [postsList, setPostsList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { isCollectionGroup, collPath, onEdit, isPrivate } = props;\r\n\r\n  useEffect(() => {\r\n    let q;\r\n    if (isCollectionGroup) {\r\n      q = query(collectionGroup(db, collPath));\r\n    } else {\r\n      q = query(collection(db, collPath));\r\n    }\r\n\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const posts = [];\r\n\r\n      querySnapshot.forEach((doc) => posts.push({ ...doc.data(), id: doc.id }));\r\n\r\n      setPostsList(posts);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [collPath, isCollectionGroup]);\r\n\r\n  const sortedPosts = postsList.sort((a, b) => b.timestamp - a.timestamp);\r\n\r\n  return (\r\n    <div className={classes.posts}>\r\n      {isLoading && <p>Loading</p>}\r\n      {!isLoading && postsList.length === 0 && <p>No posts found</p>}\r\n      {!isLoading && postsList.length !== 0 && (\r\n        <ul>\r\n          {sortedPosts.map((post) => (\r\n            <PostItem\r\n              data={post}\r\n              key={post.id}\r\n              onEdit={onEdit}\r\n              isPrivate={isPrivate}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsList;\r\n","import classes from './GeneralPosts.module.css';\r\n\r\nimport { Fragment } from 'react';\r\nimport PostsList from '../components/posts-list/PostsList';\r\n\r\nconst GeneralPosts = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {!props.isLoggedIn && (\r\n        <div className={classes.message}>\r\n          You are currently visualizing other people posts as a guest. Please\r\n          login to be able to like them and make your own\r\n        </div>\r\n      )}\r\n\r\n      <h1 className={classes.title}>General Posts</h1>\r\n      <div className={classes.posts}>\r\n        <PostsList isCollectionGroup={true} collPath={'posts'} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GeneralPosts;\r\n","export default __webpack_public_path__ + \"static/media/gear.02b5bbbc.svg\";","import { useContext, useEffect, useRef, useState } from 'react';\r\nimport AuthContext from '../../store/auth-context';\r\nimport {\r\n  addDocument,\r\n  getImageUrl,\r\n  updatePost,\r\n  uploadImage,\r\n} from '../../firebaseActions';\r\nimport classes from './NewPost.module.css';\r\n\r\nconst NewPost = ({ edit, onFinishEditing }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  console.log('new post executed');\r\n\r\n  useEffect(() => {\r\n    console.log('effect working');\r\n    if (edit && edit.image) setImage(edit.image);\r\n    if (!edit) {\r\n      setImage(null);\r\n    }\r\n    setFile(null);\r\n  }, [edit]);\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const postRef = useRef();\r\n  const fileInputRef = useRef();\r\n\r\n  if (edit) {\r\n    postRef.current.value = edit.text;\r\n  }\r\n\r\n  const fileSelectHandler = (event) => {\r\n    const currentFile = event.target.files[0];\r\n\r\n    if (event.target.files && currentFile) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setImage(e.target.result);\r\n        setFile(currentFile);\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    } else {\r\n      resetNewPost(true);\r\n    }\r\n  };\r\n\r\n  const savePostHandler = async (isPrivate) => {\r\n    const post = postRef.current.value;\r\n\r\n    if (post.trim().length === 0) {\r\n      alert('Post must not be empty');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    let collection = 'posts';\r\n    let filePath;\r\n    if (file) {\r\n      filePath = `users/${authCtx.userId}/${collection}/${file.name}`;\r\n    }\r\n\r\n    if (edit) {\r\n      if (edit.isPrivate) collection = 'private-posts';\r\n\r\n      let newImageUrl;\r\n      if (file) {\r\n        await uploadImage(filePath, file);\r\n        await getImageUrl(filePath, (url) => (newImageUrl = url));\r\n      }\r\n\r\n      await updatePost(\r\n        `users/${authCtx.userId}/${collection}/${edit.id}`,\r\n        post,\r\n        !image ? image : file ? newImageUrl : null,\r\n        edit.image_local,\r\n        filePath\r\n      );\r\n\r\n      onFinishEditing();\r\n    } else {\r\n      if (isPrivate === true) collection = 'private-posts';\r\n\r\n      let newImageUrl;\r\n      if (file) {\r\n        console.log('file uploaded');\r\n        await uploadImage(filePath, file);\r\n        await getImageUrl(filePath, (url) => (newImageUrl = url));\r\n      }\r\n\r\n      await addDocument(`users/${authCtx.userId}/${collection}`, {\r\n        text: post,\r\n        timestamp: new Date().getTime(),\r\n        author: authCtx.username,\r\n        likes: {\r\n          counter: 0,\r\n          users: [],\r\n        },\r\n        author_id: authCtx.userId,\r\n        author_photo: authCtx.profilePicture ? authCtx.profilePicture : null,\r\n        image: file ? newImageUrl : null,\r\n        image_local: filePath ? filePath : null,\r\n      });\r\n    }\r\n\r\n    resetNewPost();\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const cancelEditingHandler = () => {\r\n    onFinishEditing();\r\n    postRef.current.value = '';\r\n  };\r\n\r\n  const removeImageHandler = () => {\r\n    if (edit) {\r\n      setImage(false);\r\n    } else {\r\n      resetNewPost(true);\r\n    }\r\n  };\r\n\r\n  const resetNewPost = async (onlyImage) => {\r\n    setFile(null);\r\n    setImage(null);\r\n    fileInputRef.current.value = null;\r\n\r\n    if (!onlyImage) {\r\n      postRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  const btnClasses = isLoading ? `btn disabled` : 'btn';\r\n\r\n  return (\r\n    <div className={classes['new-post']}>\r\n      {image && (\r\n        <div className={classes['edit-img']}>\r\n          <img src={image} alt='post' />\r\n          <button onClick={removeImageHandler}>Remove image</button>\r\n        </div>\r\n      )}\r\n\r\n      <textarea placeholder='What do you want to share?' ref={postRef} />\r\n\r\n      <div className={classes.actions}>\r\n        <input\r\n          ref={fileInputRef}\r\n          type='file'\r\n          accept='image/*'\r\n          onChange={fileSelectHandler}\r\n        />\r\n\r\n        <div>\r\n          <button\r\n            className={btnClasses}\r\n            onClick={savePostHandler}\r\n            disabled={isLoading}\r\n          >\r\n            {edit ? 'Confirm edit' : 'Share'}\r\n          </button>\r\n\r\n          {!edit && (\r\n            <button\r\n              className={btnClasses}\r\n              onClick={savePostHandler.bind(null, true)}\r\n              disabled={isLoading}\r\n            >\r\n              Save as private\r\n            </button>\r\n          )}\r\n          {edit && (\r\n            <button\r\n              className={btnClasses}\r\n              onClick={cancelEditingHandler}\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {isLoading && <span>Saving...</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","export default __webpack_public_path__ + \"static/media/down-arrow.474a217e.svg\";","import { useContext, useState } from 'react';\r\nimport AuthContext from '../store/auth-context';\r\nimport UserInfo from '../components/profile/UserInfo';\r\nimport NewPost from '../components/profile/NewPost';\r\nimport PostsList from '../components/posts-list/PostsList';\r\n\r\nimport arrowImg from '../assets/icons/down-arrow.svg';\r\nimport classes from './Profile.module.css';\r\n\r\nconst Profile = () => {\r\n  const [editing, setEditing] = useState(null);\r\n  const [publicPosts, setPublicPosts] = useState(true);\r\n  const [privatePosts, setPrivatePosts] = useState(false);\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const editPostHandler = (post) => setEditing(post);\r\n  const finishEditingHandler = () => setEditing(null);\r\n\r\n  const togglePublicPosts = () => setPublicPosts((prevState) => !prevState);\r\n  const togglePrivatePosts = () => setPrivatePosts((prevState) => !prevState);\r\n\r\n  return (\r\n    <div className={classes.profile}>\r\n      <UserInfo />\r\n      \r\n      <div className={classes.posts}>\r\n        <NewPost edit={editing} onFinishEditing={finishEditingHandler} />\r\n\r\n        <section className={classes['posts-section']}>\r\n          <img\r\n            src={arrowImg}\r\n            onClick={togglePublicPosts}\r\n            style={{ transform: publicPosts ? 'rotate(-90deg)' : '' }}\r\n            alt='arrow-icon'\r\n          />\r\n          <h2>Public posts</h2>\r\n\r\n          {publicPosts && (\r\n            <PostsList\r\n              collPath={`users/${authCtx.userId}/posts`}\r\n              userId={authCtx.userId}\r\n              onEdit={editPostHandler}\r\n              isPrivate={false}\r\n            />\r\n          )}\r\n        </section>\r\n\r\n        <section className={classes['posts-section']}>\r\n          <img\r\n            src={arrowImg}\r\n            onClick={togglePrivatePosts}\r\n            style={{ transform: privatePosts ? 'rotate(-90deg)' : '' }}\r\n            alt='arrow-icon'\r\n          />\r\n          <h2>Private posts</h2>\r\n\r\n          {privatePosts && (\r\n            <PostsList\r\n              collPath={`users/${authCtx.userId}/private-posts`}\r\n              onEdit={editPostHandler}\r\n              isPrivate={true}\r\n            />\r\n          )}\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","export default __webpack_public_path__ + \"static/media/background.a22d7c02.jpg\";","import { useContext, Fragment } from 'react';\nimport { Redirect, Route, Switch, useLocation } from 'react-router';\nimport MainNavigation from './components/navigation-bar/MainNavigation';\nimport AuthForm from './pages/AuthForm';\nimport GeneralPosts from './pages/GeneralPosts';\nimport Profile from './pages/Profile';\nimport AuthContext from './store/auth-context';\nimport backgroundImg from './assets/background.jpg';\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  const location = useLocation();\n\n  return (\n    <Fragment>\n      {location.pathname !== '/auth' && <MainNavigation />}\n      <img className='background' src={backgroundImg} alt='background' />\n\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to='/auth' />\n        </Route>\n\n        <Route path='/auth'>\n          {!authCtx.isLoggedIn && <AuthForm />}\n          {authCtx.isLoggedIn && <Redirect to='/profile' />}\n        </Route>\n\n        {authCtx.isLoggedIn && (\n          <Route path='/profile'>\n            <Profile />\n          </Route>\n        )}\n\n        <Route path='/general'>\n          <GeneralPosts isLoggedIn={authCtx.isLoggedIn} />\n        </Route>\n\n        <Route path='*'>\n          <Redirect to='/auth' />\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\r\nimport AuthContext from './auth-context';\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n} from 'firebase/auth';\r\nimport { doc, setDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport { useHistory } from 'react-router';\r\nimport { getUserInfo } from '../firebaseActions';\r\n\r\nconst initialUserState = {\r\n  isLoggedIn: false,\r\n  id: '',\r\n  username: null,\r\n};\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [user, setUser] = useState(initialUserState);\r\n  const history = useHistory();\r\n\r\n  const auth = getAuth();\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        const getUser = async () => {\r\n          const userInfo = await getUserInfo(user.uid);\r\n          setUser({\r\n            isLoggedIn: true,\r\n            id: user.uid,\r\n            username: userInfo.username,\r\n            profilePicture: userInfo.photo,\r\n          });\r\n        };\r\n        getUser();\r\n      }\r\n    });\r\n  }, [auth]);\r\n\r\n  const createNewUser = (email, password, username) => {\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => {\r\n        setUser({ isLoggedIn: true, id: userCredential.user.uid });\r\n        return userCredential.user.uid;\r\n      })\r\n      .then((id) => {\r\n        return setDoc(doc(db, 'users', id), {\r\n          username,\r\n          email,\r\n        });\r\n      })\r\n      .then(() => {\r\n        alert('You have succesfully created an account');\r\n        history.push('/profile');\r\n      })\r\n      .catch((err) => {\r\n        alert(err.code);\r\n      });\r\n  };\r\n\r\n  const login = (email, password) => {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => {\r\n        setUser({ isLoggedIn: true, id: userCredential.user.uid });\r\n      })\r\n      .then(() => {\r\n        history.push('/profile');\r\n      })\r\n      .catch((err) => {\r\n        alert(err.code);\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    auth.signOut();\r\n    setUser(initialUserState);\r\n  };\r\n\r\n  const pictureChange = (updatedPhoto) => {\r\n    setUser((prevState) => ({ ...prevState, profilePicture: updatedPhoto }));\r\n  };\r\n\r\n  const authContext = {\r\n    isLoggedIn: user.isLoggedIn,\r\n    userId: user.id,\r\n    username: user.username,\r\n    profilePicture: user.profilePicture,\r\n    createNewUser,\r\n    login,\r\n    logout,\r\n    pictureChange,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContext}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport AuthContextProvider from './store/AuthContextProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename='/Social-Network'>\n      <AuthContextProvider>\n        <App />\n      </AuthContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}